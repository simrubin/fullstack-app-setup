name: Deploy Fullstack App to Azure Container Instances

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry (ACR)
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build and push Backend image
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest ./backend
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest

      - name: Build and push Frontend image
        env:
          VITE_API_URL: http://${{ secrets.ACI_BACKEND_DNS }}.australiasoutheast.azurecontainer.io:5000
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest \
            --build-arg VITE_API_URL=$VITE_API_URL ./frontend
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest

      - name: Delete existing Backend container if exists
        continue-on-error: true
        run: |
          az container delete \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_BACKEND_NAME }} \
            --yes

      - name: Delete existing Frontend container if exists
        continue-on-error: true
        run: |
          az container delete \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_FRONTEND_NAME }} \
            --yes

      - name: Deploy Backend container
        run: |
          az container create \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_BACKEND_NAME }} \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest \
            --dns-name-label ${{ secrets.ACI_BACKEND_DNS }} \
            --ports 5000 \
            --os-type Linux \
            --cpu 0.5 \
            --memory 1 \
            --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }}

      - name: Debug ACR_USERNAME and ACR_PASSWORD
        run: |
          echo "ACR_USERNAME: ${{ secrets.ACR_USERNAME }}"
          echo "ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}"

      - name: Print az container create command for frontend
        run: |
          echo "az container create \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_FRONTEND_NAME }} \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest \
            --dns-name-label ${{ secrets.ACI_FRONTEND_DNS }} \
            --ports 5173 \
            --os-type Linux \
            --cpu 0.5 \
            --memory 1 \
            --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }}"

      - name: Deploy Frontend container
        run: |
          az container create \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_FRONTEND_NAME }} \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest \
            --dns-name-label ${{ secrets.ACI_FRONTEND_DNS }} \
            --ports 5173 \
            --os-type Linux \
            --cpu 0.5 \
            --memory 1 \
            --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }}
