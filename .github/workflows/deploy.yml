name: Deploy Fullstack App to Azure Container Instances

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry (ACR)
        env:
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
        run: |
          echo "$ACR_PASSWORD" | docker login "$ACR_LOGIN_SERVER" -u "$ACR_USERNAME" --password-stdin

      - name: Build and push Backend image
        env:
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
        run: |
          docker build --platform linux/amd64 -t "$ACR_LOGIN_SERVER/backend:latest" ./backend
          docker push "$ACR_LOGIN_SERVER/backend:latest"

      - name: Build and push Frontend image
        env:
          VITE_API_URL: http://${{ secrets.ACI_BACKEND_DNS }}.australiasoutheast.azurecontainer.io:5000
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
        run: |
          docker build --platform linux/amd64 -t "$ACR_LOGIN_SERVER/frontend:latest" \
            --build-arg VITE_API_URL="$VITE_API_URL" ./frontend
          docker push "$ACR_LOGIN_SERVER/frontend:latest"

      - name: Delete existing Backend container if exists
        continue-on-error: true
        env:
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          ACI_BACKEND_NAME: ${{ secrets.ACI_BACKEND_NAME }}
        run: |
          az container delete \
            --resource-group "$RESOURCE_GROUP" \
            --name "$ACI_BACKEND_NAME" \
            --yes

      - name: Delete existing Frontend container if exists
        continue-on-error: true
        env:
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          ACI_FRONTEND_NAME: ${{ secrets.ACI_FRONTEND_NAME }}
        run: |
          az container delete \
            --resource-group "$RESOURCE_GROUP" \
            --name "$ACI_FRONTEND_NAME" \
            --yes

      - name: Debug secret presence (safe)
        run: |
          echo "ACR_USERNAME length: ${#ACR_USERNAME}"
          echo "ACR_PASSWORD length: ${#ACR_PASSWORD}"
          echo "ACR_LOGIN_SERVER length: ${#ACR_LOGIN_SERVER}"
          echo "ACR_USERNAME starts with: ${ACR_USERNAME:0:3}..."
        env:
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}

      - name: Deploy Backend container
        env:
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          ACI_BACKEND_NAME: ${{ secrets.ACI_BACKEND_NAME }}
          ACI_BACKEND_DNS: ${{ secrets.ACI_BACKEND_DNS }}
        run: |
          az container create \
            --resource-group "$RESOURCE_GROUP" \
            --name "$ACI_BACKEND_NAME" \
            --image "$ACR_LOGIN_SERVER/backend:latest" \
            --dns-name-label "$ACI_BACKEND_DNS" \
            --ports 5000 \
            --os-type Linux \
            --cpu 0.5 \
            --memory 1 \
            --registry-login-server "$ACR_LOGIN_SERVER" \
            --registry-username "$ACR_USERNAME" \
            --registry-password "$ACR_PASSWORD"

      - name: Deploy Frontend container
        env:
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          ACI_FRONTEND_NAME: ${{ secrets.ACI_FRONTEND_NAME }}
          ACI_FRONTEND_DNS: ${{ secrets.ACI_FRONTEND_DNS }}
        run: |
          az container create \
            --resource-group "$RESOURCE_GROUP" \
            --name "$ACI_FRONTEND_NAME" \
            --image "$ACR_LOGIN_SERVER/frontend:latest" \
            --dns-name-label "$ACI_FRONTEND_DNS" \
            --ports 5173 \
            --os-type Linux \
            --cpu 0.5 \
            --memory 1 \
            --registry-login-server "$ACR_LOGIN_SERVER" \
            --registry-username "$ACR_USERNAME" \
            --registry-password "$ACR_PASSWORD"
